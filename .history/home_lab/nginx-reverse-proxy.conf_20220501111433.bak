### Proxmox / Hypervisor / Master Node ###
##########################################
server {      # Redirect: HTTP --> HTTPS
        listen 80;                                        # Listen on port 80 for HTTP request

        server_name proxmox.lo;                           # Domain name of host server.
        return 301 https://$host$request_uri;             # "return 301" - Redirect(proxy) over SSL | preserve($host)($request_uri) original request

}
server{       # HTTPS
        listen 443 ssl http2;                                           # Listen on port 443 for secure HTTP(https/ssl) using version 2 (http2)
        ssl_certificate /etc/nginx/ssl/mydomaincert.crt;                # certifcation for secure http
        ssl_certificate_key /etc/nginx/ssl/myprivatekey.key;            # directory path for certification key
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;                            # compatibile encryption protocols
        ssl_ciphers HIGH:!aNULL:!MD5;                                   # macros for openssl ciphers

        location / {                                                    # Resolve request to this location
         proxy_pass "https://10.2.9.199:8006";                          # ip address for resolving domain name
        }
}
###########################################
##         Router / VPN / Switch / DHCP
###########################################
#
server {      # Redirect: HTTP --> HTTPS
        listen 80;
        server_name router.lo;
        return 301 https://$host$request_uri;

}
server{      # HTTPS
        listen 443 ssl http2;
        ssl_certificate /etc/nginx/ssl/mydomaincert.crt;
        ssl_certificate_key /etc/nginx/ssl/myprivatekey.key;
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
        ssl_ciphers HIGH:!aNULL:!MD5;



        server_name router.lo;
         if ($request_uri = '/' ) {                             # wildcard function for rewriting uri
         rewrite  ^/(.*)$  https://$host/cgi-bin/luci;          # rewrite uri (/cgi-bin/luci) but perserve host ($host) of the request
         }                                                      # ** symbols are syntax for rewriting everything and returing the output as variable $1

        location / {
         proxy_pass https://10.2.9.1;
        }
}
####################################
#           JellyFin (10.2.9.112)  #
####################################
##      media.lo / dash.lo / browse.plex.lo / sab.lo / tv.media.lo / movies.media.lo / docker.media.lo
server{     #HTTP
        listen 80;
        server_name media.lo;

        location / {
         proxy_pass "http://10.2.9.112:8096";
        }

}
server{ listen 80;
        server_name "dash.lo";
        location / {
                proxy_pass "http://10.2.9.112:8111";
        }
}
server{ listen 80;
        server_name browse.plex.lo;
        location / {
                proxy_pass "http://10.2.9.102:5055";
        }
}
server{ listen 80;
        server_name sab.lo;
        location / {
                proxy_pass "http://10.2.9.102:8080";
        }
}
server{ listen 80;
        server_name tv.media.lo;
        location / {
                proxy_pass "http://10.2.9.102:8989";
        }
}
server{ listen 80;
        server_name movies.media.lo;
        location / {
                proxy_pass "http://10.2.9.102:7878";
        }
}
server{ listen 80;
        server_name docker.media.lo;
        location / {
                proxy_pass "http://10.2.9.102:9000";
        }
}
####################################
#         AdGuard / DNS            #
####################################


server{      # HTTP
       listen 80;
       server_name adguard.lo;

        location / {
         proxy_pass "http://10.2.9.236";
         }
}
####################################
#    Jammibox / Ubuntu 22.04 LTS   #
####################################
          #Barrier Connection
#server{
#       listen 80;
#       server_name jammi.lo;
#
#       location / {
#       proxy_pass "http://10.2.9.102:24800";
#       }
#}
###################################
#       Nextcloud Instance        #
###################################
server{
        listen 80;
        server_name cloud.lo;
        return 301 https://$host$request_uri;
}
server{
        listen 443 ssl http2;
        ssl_certificate /etc/nginx/ssl/mydomaincert.crt;
        ssl_certificate_key /etc/nginx/ssl/myprivatekey.key;
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
        ssl_ciphers HIGH:!aNULL:!MD5;
        server_name cloud.lo;

        location / {
        proxy_pass "https://10.2.9.112:4443";
        }
}
#########################################
##              Plex Server           ###
#########################################
server { # HTTP Redirect
        listen 80;
        server_name plex.lo;
        return 301 https://$host$request_uri;
}
server{ # HTTPS
        listen 443 ssl http2;
        ssl_certificate /etc/nginx/ssl/mydomaincert.crt;
        ssl_certificate_key /etc/nginx/ssl/myprivatekey.key;
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
        ssl_ciphers HIGH:!aNULL:!MD5;

        server_name plex.lo;
        location / {
         proxy_pass https://10.2.9.102:32400;
        }
}
server{
        listen 80;
        server_name files.lo;
        location / {
        proxy_pass "http://10.2.9.102:9005";
        }
}
